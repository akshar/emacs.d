* Web Mode
  #+BEGIN_SRC emacs-lisp
    (use-package web-mode
      :ensure t
      :defer t
      :init (add-hook 'before-save-hook 'web-mode-buffer-indent)    ;;indent buffer before saving
      :mode (("\\.html?\\'" . web-mode)
	     ("\\.css?\\'" . web-mode)
	     ("\\.mustache\\'" . web-mode)
	     ("\\.erb\\'" . web-mode))
      :config
      (setq-default indent-tabs-mode nil)
      (setq web-mode-markup-indent-offset 2)
      (setq web-mode-code-indent-offset 2)
      (setq web-mode-css-indent-offset 2)
      (setq web-mode-script-padding 0)
      (setq web-mode-enable-auto-expanding t)
      (setq web-mode-enable-css-colorization t)
      (setq web-mode-enable-auto-pairing nil)
      (setq web-mode-enable-auto-closing t)
      (setq web-mode-enable-auto-quoting t)
      (setq web-mode-auto-close-style 2)      ;;close after opening-tag
      (setq web-mode-auto-quote-style 2))     ;;use single-quotes for attributes(requires v15)

  #+END_SRC




* Emmet
  #+BEGIN_SRC emacs-lisp
    (use-package emmet-mode
      :ensure t
      :config
      (add-hook 'sgml-mode-hook 'emmet-mode)
      (add-hook 'web-mode-hook 'emmet-mode)
      (add-hook 'css-mode-hook 'emmet-mode))
  #+END_SRC


* css mode
  #+BEGIN_SRC emacs-lisp
    (use-package css-mode
      :ensure nil
      :init (setq css-indent-offset 2))
  #+END_SRC


* SCSS mode
  #+BEGIN_SRC emacs-lisp
    (use-package scss-mode
      :init
      ;; Disable complilation on save
      (setq scss-compile-at-save nil))
  #+END_SRC


* CSS eldoc
  #+BEGIN_SRC emacs-lisp
    (use-package css-eldoc
      :commands turn-on-css-eldoc
      :hook ((css-mode scss-mode less-css-mode) . turn-on-css-eldoc))
  #+END_SRC


* JSON mode
  #+BEGIN_SRC emacs-lisp
    (use-package json-mode
      :ensure t
      :mode (("\\.json\\'" . json-mode)
	     ("\\.tmpl\\'" . json-mode)
	     ("\\.eslintrc\\'" . json-mode))
      :config (setq-default js-indent-level 2))
  #+END_SRC


* JSON reformat
  #+BEGIN_SRC emacs-lisp
    (use-package json-reformat
      :ensure t
      :after json-mode
      :bind (("C-c r" . json-reformat-region)))
  #+END_SRC


* YAML mode
  #+BEGIN_SRC emacs-lisp
    (use-package yaml-mode
      :ensure t
      :mode ("\\.ya?ml\\'" . yaml-mode))

  #+END_SRC



