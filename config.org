* Interface tweaks
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)

(defalias 'list-buffers 'ibuffer)
(windmove-default-keybindings) ;; shift+ arrow keys to movearound buffers

(global-set-key (kbd "<f5>") 'revert-buffer)
#+END_SRC


* try 
  Try out emacs packages without installing them.
  #+BEGIN_SRC emacs-lisp
(use-package try
  :ensure t)
  #+END_SRC

  
* which key 
  Keybindings help
  #+BEGIN_SRC emacs-lisp
  (use-package which-key
  :ensure t
  :config (which-key-mode))
  #+END_SRC


* Org Mode
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
  :ensure t
  :config (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC



* Ido
#+BEGIN_SRC emacs-lisp
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
#+END_SRC

* Counsel
#+BEGIN_SRC emacs-lisp
(use-package counsel
  :ensure t)
#+END_SRC


* Swiper
  Isearch
  #+BEGIN_SRC emacs-lisp
  (use-package swiper
   :ensure t
   :config (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  (setq enable-recursive-minibuffers t)
  ;; enable this if you want `swiper' to use it
  ;; (setq search-default-mode #'char-fold-to-regexp)
  (global-set-key "\C-s" 'swiper)
  (global-set-key (kbd "C-c C-r") 'ivy-resume)
  (global-set-key (kbd "<f6>") 'ivy-resume)
  (global-set-key (kbd "M-x") 'counsel-M-x)
  (global-set-key (kbd "C-x C-f") 'counsel-find-file)
  (global-set-key (kbd "<f1> f") 'counsel-describe-function)
  (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
  (global-set-key (kbd "<f1> l") 'counsel-find-library)
  (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
  (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
  (global-set-key (kbd "C-c g") 'counsel-git)
  (global-set-key (kbd "C-c j") 'counsel-git-grep)
  (global-set-key (kbd "C-c k") 'counsel-ag)
  (global-set-key (kbd "C-x l") 'counsel-locate)
  (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
  (define-key minibuffer-local-map (kbd "C-r") 'counsel-minibuffer-history))
  #+END_SRC

* Autocomplete 
#+BEGIN_SRC emacs-lisp
(use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)))
#+END_SRC


* Customizations:
** Theme
 #+BEGIN_SRC emacs-lisp
 (use-package zenburn-theme
  :ensure t
  :config (load-theme 'zenburn t))
 #+END_SRC

